Q) Write a java program to display array elements in spiral form?

input:
	1 2 3 
	4 5 6
	7 8 9 

Output:
	1 2 3 6 9 8 7 4 5 

ex:
---

class  Test 
{
	public static void main(String[] args) 
	{
		int[][] matrix={
							{1,2,3},
							{4,5,6},
							{7,8,9}
						};
						
		int rows=matrix.length;
		int cols=matrix[0].length;
		
		int top=0;
		int bottom=rows-1;
		int left=0;
		int right=cols-1;
		
		while(true)
		{
			if(left>right)
			{
				break;
			}
			
			for(int i=left;i<=right;i++)
			{
				System.out.print(matrix[top][i]+" ");
			}
			top++;
			
			
			if(top>bottom)
			{
				break;
			}
			for(int i=top;i<=bottom;i++)
			{
				System.out.print(matrix[i][right]+" ");
			}
			right--;
			
			
			if(left>right)
			{
				break;
			}
			
			for(int i=right;i>=left;i--)
			{
				System.out.print(matrix[bottom][i]+" ");
			}
			bottom--;
			
			if(top>bottom)
			{
				break;
			}
			for(int i=bottom;i>=top;i--)
			{
				System.out.print(matrix[i][left]+" ");
			}
			left++;
			
		}
		
	}
}


3) Multi- Dimensional array 
==========================
Multi dimensional array refers to an array which contains more then two dimensions.

We can declare multi dimensional array as follow.

ex:
	int[][][] arr=new int[2][3][4];  // 2*3*4 

We can initialize multi dimensional array as follow.

ex:
	int[][][] arr={
				{
					{1,2,3,4},
					{5,6,7,8},
					{9,10,11,12}
				},
				{
					{13,14,15,16},
					{17,18,19,20},
					{21,22,23,24}

				}	
			};


Q) Write a java program to display the elements from multi dimensional array?

class  Test 
{
	public static void main(String[] args) 
	{
		int[][][] arr={
				{
					{1,2,3,4},
					{5,6,7,8},
					{9,10,11,12}
				},
				{
					{13,14,15,16},
					{17,18,19,20},
					{21,22,23,24}

				}	
			};

		for(int i=0;i<arr.length;i++)
		{
			for(int j=0;j<arr[i].length;j++)
			{
				for(int k=0;k<arr[i][j].length;k++)
				{
					System.out.print(arr[i][j][k]+" ");
				}
				//new line
				System.out.println();
			}
		}
		
	}
}

Anonymous array
================
Sometimes we will declare an array without name such type of nameless array is called anonymous array.

The main objective of anonymous array is just for instance use.

We can declare anonymous array as follow.

ex:
	new int[]{10,20,30};
	new int[][]{{10,20,30},{40,50,60}};

ex:
---

class  Test 
{
	public static void main(String[] args) 
	{
		sum(new int[]{10,20,30});	
	}
	//callie method
	public static void sum(int[] arr)
	{
		int sum=0;
		
		for(int i:arr)
		{
			sum+=i;
		}
		
		System.out.println(sum);
	}
}

ex:
---
class  Test 
{
	public static void main(String[] args) 
	{
		System.out.println(sum(new int[]{10,20,30}));	
	}
	//callie method
	public static int sum(int[] arr)
	{
		int sum=0;
		
		for(int i:arr)
		{
			sum+=i;
		}
		
		return sum;
	}
}

Jagged Array
=============
Jagged array is also known as array of arrays.

It is a multi dimensional array where each row having different column size.

ex:

class  Test 
{
	public static void main(String[] args) 
	{
		int[][] arr = {
						{1, 2, 3},
						{4, 5},
						{6, 7, 8, 9}
					};
					
		for(int i=0;i<arr.length;i++)
		{
			for(int j=0;j<arr[i].length;j++)
			{
				System.out.print(arr[i][j]+" ");
			}
			//new line
			System.out.println();
		}
	}
	
}

OOPS
=====
OOPS stands for Object Oriented Programming System/Structure.

OOPS allows us to deal with real world entities by using programming language.

A language is said to be object oriented if it supports following features.

ex:
	class
	object
	Abstraction
	Encapsulation 
	Inheritance
	Polymorphism 

class
======
A class is a blue print of an object.

A class is a collection of objects.

A class is a logical entity.

A class will accept following modifiers.

ex:
	default
	public
	final 
	abstract 

We can declare a class as follow.
ex:
	optional 
	|
	Modifier class class_name <extends> Parent_classname 
				  <implements> Interface_name
	{
		-
		- // collection of objects
		-
	}


Q) What is the difference between default class and public class?

default class					public class
--------------					--------------
To declare a default class we should not 	To declare a public class we should use 	
use any modifier.				public modifier.

ex:						ex:
	class Test					public class Test
	{						{
			
	}						}

If we declare any class as default then we	If we declare any class as public then we can  
can access that class within the package.	access that class within the package and outside
						the package.


Q) What is the difference between final class and abstract class?

final class					abstract class
--------------					--------------
To declare a final class we will use 		To declare a abstract class we will use 
final modifier.					abstract modifier.
ex:						ex:
	final class A 					abstract class A 
	{						{
		
	}						}

Child creation is not possible.			Child creation is possible.

Object creation is possible.			Object creation is not possible.


object
========
It is a outcome of a blue print.

It is a instance of a class.
Here instance means allocating memory of our data members.

It is a physical entity.

It is a collection of property and behaviours.

Realtime 
--------
		Dog (object)
			|
		|----------------|
	properties		Behaviours
	
	> Age			> Eating
	> Name			> Sleeping 
	> Color			> Barking 
	> Height		and etc.
	> Weight 
	and etc.

It is possible to create more then one object in a single class.

We can create object as follow.

ex:	reference 
	variable     constructor 
	     |	      |
	Test t = new Test();
	|	 |
classname 	operator 

ex:
----
class  Test 
{
	public static void main(String[] args) 
	{
		Test t1=new Test();
		Test t2=new Test();
		Test t3=new Test();
		
		System.out.println(t1.hashCode());
		System.out.println(t2.hashCode());
		System.out.println(t3.hashCode());
		
		System.out.println(t1);//Test@Hexadecimal
		System.out.println(t2.toString());
		System.out.println(t3.toString());
	}	
}






























































