3)With returntype with no argument method
=========================================
In a method we can declare multiple return statements but a method can run only one value at a time.

Here return type is depends upon output datatype.


Q) Write a java program to perform sum of two numbers using with returntype with no argument
method?

import java.util.Scanner;
class Test 
{
	public static void main(String[] args) 
	{
		//caller method
		int k=sum();
		System.out.println("Addition of two numbers is ="+k);
	}
	//callie method
	public static int sum()
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a=sc.nextInt();
		
		System.out.println("Enter the second number :");
		int b=sc.nextInt();
		
		int c = a + b;
		
		return c;
	}
}

Q) Write a java program to perform area of a circle using with returntype with no argument method?

import java.util.Scanner;
class Test 
{
	public static void main(String[] args) 
	{
		//caller method
		float k=circle();
		System.out.println("Area of a circle is ="+k);
	}	
	//callie method
	public static float circle()
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the radius :");
		int r=sc.nextInt();
		
		float area=3.14f*r*r;
		
		return area;
	}
}

4) With returntype with argument method
========================================

Q) Write a java program to perform sum of two numbers using with returntype with argument method?

import java.util.Scanner;
class Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the first number : ");
		int a=sc.nextInt();//10
		
		System.out.println("Enter the second number : ");
		int b=sc.nextInt();//20
		
		//caller method
		System.out.print("Sum of two numbers is ="+sum(a,b));
	}	
	//callie method
	public static int sum(int a,int b)
	{
		int c = a + b;
		
		return c;
	}
}

Q) Write a java program to check given number is even or odd using with returntype with argument method?

ex:
---
import java.util.Scanner;
class Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number :");
		int n=sc.nextInt();//2
		
		//caller method 
		System.out.println(find(n));
	}	
	//callie method
	public static  String  find(int n)
	{
		if((n&1)==0)
			return "It is even number";
		else
			return "It is odd number";
	}
}

approach2
---------
import java.util.Scanner;
class Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number :");
		int n=sc.nextInt();//2
		
		//caller method 
		int k=find(n);
		
		if(k==1)
			System.out.println("It is even number");
		else
			System.out.println("It is odd number");
	}	
	//callie method
	public static  int  find(int n)
	{
		if((n&1)==0)
			return 1;
		else
			return 0;
	}
}

approach3
----------

import java.util.Scanner;
class Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number :");
		int n=sc.nextInt();//2
		
		//caller method 
		if(find(n))
			System.out.println("It is even number");
		else
			System.out.println("It is odd number");
	}	
	//callie method
	public static  boolean  find(int n)
	{
		if((n&1)==0)
			return true;
		else
			return false;
	}
}

Recursion 
==========
A method which call itself for many number of times is called recursion.

Recursion is similar to loopings.

Whenever we use recursion , we should not use loops.


Q) Write a java program to display 10 natural numbers without using loops?

class Test 
{
	public static void main(String[] args)
	{
		//caller method
		display(1);
	}
	//callie method 
	public static void display(int i)
	{
		if(i<=10)
		{
			System.out.print(i+" ");
			
			display(i+1);
		}
	}
}


Q) Write a java program to perform sum of two numbers without using arithmetic operator?


class Test 
{
	public static void main(String[] args)
	{
		int a=5,b=10;
		
		//caller method
		System.out.println(sum(a,b));
	}
	//callie method 
	public static int sum(int a,int b)
	{
		if(a==0)
			return b;
		
		return sum(--a,++b);
	}
}

Q) Write a java program to find out factorial of a given number using recursion?

import java.util.Scanner;
class Test 
{
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number : ");
		int n=sc.nextInt(); // 5
		
		//caller method
		System.out.println(fact(n));
	}
	//callie method 
	public static int fact(int n)
	{
		if(n<0)
			return -1;
		
		if(n==0)
			return 1;
		
		return n*fact(n-1);
	}
}

Q) Write a java program to display N-th element of fibonacci series?

fibonacci sequence : 0 1 1 2 3 5 8 

Input:
	4

output:
	2

ex:
---
import java.util.Scanner;
class Test 
{
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number :");
		int n=sc.nextInt();//4
		
		//caller method 
		System.out.println(fib(n));
	}
	//callie method 
	public static int fib(int n)
	{
		if(n==0 || n==1)
			return 0;
		if(n==2)
			return 1;
		
		return fib(n-1)+fib(n-2);
	}
}

Q) Write a java program to find out reverse of a given number using recursion?

import java.util.Scanner;
class Test 
{
	public static void main(String[] args)
	{
		int orginal=123;
		int reverse=0;
		
		//caller method 
		System.out.println(reverse(orginal,reverse));
	}
	//callie method 
	public static  int  reverse(int n,int rev)
	{
		if(n==0)
			return rev;
		else
			return reverse(n/10,rev * 10 + (n%10));
	}
}

Assignment
==========
Q) Write a java program to perform reverse of a given number using four ways?

































































































