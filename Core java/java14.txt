Q) Write a java program to perform swapping of two numbers?

import java.util.Scanner;
class Example8
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);

		System.out.println("Enter the first number :");
		int a=sc.nextInt();//10

		System.out.println("Enter the second number :");
		int b=sc.nextInt();//20

		System.out.println("Before swapping a = "+a+" and b = "+b);

		//logic
		int temp=a;
		a=b;
		b=temp;

		System.out.println("After swapping a = "+a+" and b = "+b);
	}
}

Q) Write a java program to perform swapping of two numbers without using third variable?

import java.util.Scanner;
class Example9
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);

		System.out.println("Enter the first number :");
		int a=sc.nextInt();//10

		System.out.println("Enter the second number :");
		int b=sc.nextInt();//20

		System.out.println("Before swapping a = "+a+" and b = "+b);

		//logic
		a = a + b;
		b = a - b;
		a = a - b; 

		System.out.println("After swapping a = "+a+" and b = "+b);
	}
}

Q) Write a java program to find out 10% of TDS from given salary?

import java.util.Scanner;
class Example10
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);

		System.out.println("Enter the salary :");
		int salary=sc.nextInt();

		float tds=(float)salary*10/100;

		System.out.println("10 percent of TDS is ="+tds);
	}
}

Q) Write a java program to convert CGPA to percentage?

import java.util.Scanner;
class Example11
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);

		System.out.println("Enter the CGPA :");
		float cgpa=sc.nextFloat();

		float percent=cgpa*9.5f;

		System.out.println("CGPA to percentage is ="+percent);
	}
}


Typescasting 
=============
The process of converting from one datatype to another datatype is called typecasting.

In java, typecasting can be performed in two ways.

1) Implicit typecasting 

2) Explicit typecasting
 

1) Implicit typecasting 
-----------------------
If we want to store small value in a bigger variable then we need to use implicit 
typecasting.

A compiler is responsible to perform implicit typecasting.

There is no possibility to loss the information.

It is also known as widening or upcasting.

We can perform implicit typecasting as follow.

ex:
	byte	-->	short
				-->
					int  -->    long  -->	float  --> double
				-->
			char

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		byte b=10;

		int i=b;

		System.out.println(i); // 10
	}
}

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		char ch='a';

		long l=ch;

		System.out.println(l); //97 
	}
}

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		int i=10;

		double d=i;

		System.out.println(d); //10.0
	}
}

2) Explicit typecasting
-----------------------
If we want to store bigger value into a smaller variable then we need to use explicit
typecasting.

A programmer is responsible to perform explicit typecasting.

There is a possibility to loss the information.

It is also known as Narrowing or Downcasting.

We can perform explicit typecasting as follow.

ex:
	byte	<--	short
				<--
					int  <--    long  <--	float  <-- double
				<--
			char

ex:1
----
class Test 
{
	public static void main(String[] args) 
	{
		double d=10.56d;

		int i=(int)d;

		System.out.println(i); //10
	}
}

ex:2
----
class Test 
{
	public static void main(String[] args) 
	{
		int i=65;

		char ch=(char)i;

		System.out.println(ch); // A 
	}
}

ex:3
----
class Test 
{
	public static void main(String[] args) 
	{
		int i = 130;

		byte b=(byte)i;

		System.out.println(b);//-126
	}
}




Q) What is Literal?

A value which is assigned to a variable is called literal.

A value which is not change during the program execution is called literal.

ex:
	int   i = 10;
	 |    |	  |____ value of a variable / Literal
         |    |________ variable name  / identifier 
	 |_____________ datatype / keyword 




Operators 
==========
Operator is a symbol which is used to perform some operations on operands.
ex:
	c = a + b; 

	Here a,b and c are operands.
	Here = and + are operators.

It can be arithmetic operation, logical operation, bitwise operation, relational operation and etc.

We have following list of operators in java.

1) Assignment operators 

2) Conditional/Ternary operators 

3) Logical operators 

4) Bitwise operators 

5) Arithmetic operators

6) Relational operators 

7) Shift operators 

8) Unary operators


1) Assignment operators 
-----------------------

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		int i=10;

		i=20;

		i=30;

		System.out.println(i); // 30
	}
}

Note:
-----
	Reinitialization is possible in java.

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		final int i=10;

		i=20;

		i=30;

		System.out.println(i); //C.T.E 
	}
}
Note:
-----
	 cannot assign a value to final variable


ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		int i=1,2,3,4,5;

		System.out.println(i); // C.T.E 
	}
}

ex:
---
class Test 
{
	//global variable
	static int i=100;

	public static void main(String[] args) 
	{
		//local variable 
		int i=200;

		System.out.println(i); // 200
	}
}
Note:
-----
	Here priority goes to local variable.


ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		int i=10;

		i+=20; // i = i + 20

		System.out.println(i); //30
	}
}

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		int i=10;

		i-=20; // i = i - 20

		System.out.println(i); //-10
	}
}

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		int i=10;

		i*=5; // i = i * 5;

		System.out.println(i); //50
	}
}


ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		int i=10;

		i/=5; // i = i / 5;

		System.out.println(i); //2
	}
}

ex:
--
class Test 
{
	public static void main(String[] args) 
	{
		int i=10;

		i/=50; // i = i / 50;

		System.out.println(i); //0
	}
}

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		int i=10;

		i%=5; // i = i % 5;

		System.out.println(i); //0
	}
}

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		int i=10;

		i%=50; // i = i % 50;

		System.out.println(i); //10
	}
}

2) Conditional/Ternary operators 
--------------------------------
syntax:
--------
	(condition)?value1:value2;
ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		boolean b=(5>2)?true:false;

		System.out.println(b);//true 
	}
}

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		String s=(5>20)?"Hi":"Bye";

		System.out.println(s);//Bye 
	}
}

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		int i=(true)?1:0;

		System.out.println(i);//1
	}
}

Assignment
==========
Q) 
  Jack wants to buy a shoe and he went a big showroom to finalize the shoe.But
  he has a myth that if shoe price is divisible by 3 and 5 then only he can buy
  that shoes?

 Input:
	 1000	

 output:
	 Jack can't buy the show 





















