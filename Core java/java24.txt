Arrays
=======
In a normal variable we can store only one value at a time.

If we want to store multiple values in a single variable then we need to use arrays.

Array is a collection of homogeneous data elements.

The main advantage of arrays are 

1) We can represent multiple elements using single variable name.
   Ex:
	int[] arr={10,20,30};	

2) Performance point of view arrays are recommanded to use.

The main disadvantage of arrays are 

1) Arrays are fixed in size. Once if we create an array there is no chance of increasing or decreasing the 
   size of an array.

2) To use array concept in advanced we should know what is the size of an array which is always not possible.

In java, Arrays are classified into three types.

1) Single Dimensional Array 

2) Double Dimensional Array 

3) Multi Dimensional Array 


Array Declaration
------------------
At the time of array declaration we should not specify array size.

					Arrays
	|----------------------------------|---------------------------------|
Single Dimesional Array		Double Dimensional Array		Multi-Dimensional Array 

int[]  arr;			int[][] arr;				int[][][] arr;
int  []arr;			int  [][]arr;				int  [][][]arr;
int  arr[];			int  arr[][];				int  arr[][][];
				int[]  []arr;				int[][]  []arr;
				int[]  arr[];				int[][]  arr[];
				int  []arr[];				int[]  [][]arr;
									int[]  arr[][];
									int[]  []arr[];
									int  [][]arr[];
									int  []arr[][];

Array Creation
--------------
In java, every array consider as an object. Hence we will use new operator to create an array.

Diagram: java24.1

Rules to construct an array.

Rule1:
------
	At the time of array creation compulsary we need to specify array size otherwise we will get 
	compile time error.
	ex:
		int[] arr = new int[3];

		int[] arr = new int[]; // C.T.E array dimension missing 

Rule2:
-----
	It is legal to have an array size with zero.
	ex:
		int[] arr=new int[0];
		System.out.println(arr.length);//0

Rule3:
------
	We can't take negative number as an array size otherwise we will get runtime exception called 
	NegativeArraySizeException.
	ex:
		int[] arr=new int[3];

		int[] arr=new int[-3]; // R.E NegativeArraySizeException 	

Rule4:
-----
	The allowed datatype for an array size is byte,short,int and char.
	If we take other datatypes then we will get compile time error.
	ex:	
		int[] arr = new int['a']; 

		byte b=10;
		int[] arr=new int[b];

		int[] arr=new int[10.5d]; //invalid  


Rule5:
------
	The maximum length we can take for an array size is maximum length of int datatype.
	ex:
		int[] arr=new int[2147483647];	


Array Initialization
----------------------
Whenever we construct an array, every array element will be initialized with default values.

If we are not happy with default values then we can change with customized values.

Ex:
	int[]  arr = new int[3];
	arr[0]=10;
	arr[1]=20;
	arr[2]=30;
	arr[3]=40; // R.E ArrayIndexOutOfBoundsException 

Diagram: java24.2


Array Declaration, Creation and Initialization using single line
----------------------------------------------------------------

	int[] arr;
	arr=new int[3];
	arr[0]=10;
	arr[1]=20;
	arr[2]=30;	===>	int[] arr={10,20,30};
			===>	char[] carr={'a','b','c'};
			===>	String[] sarr={"hi","hello","Hey"};


Q) What is the difference between length and length() method?

length
-------
It is a final variable which is applicable for arrays.

It returns size of an array.

ex:

class Test  
{
	public static void main(String[] args) 
	{
		int[]  arr = new int[3];
		System.out.println(arr.length);//3
	}
}
	
length()
-------
It is a final method which is applicable for String objects.

It will return number of characters present in string.

ex:

class Test  
{
	public static void main(String[] args) 
	{
		String str="ihub";
		System.out.println(str.length());//4
	}
}


	
Programs
=========

Q) Write a java program to insert some elements in array and display them?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the size : ");
		int size=sc.nextInt();//4
		
		int[] arr=new int[size];
		
		//inserting elements
		for(int i=0;i<arr.length;i++)
		{
			System.out.println("Enter the array element : ");
			arr[i]=sc.nextInt();
		}
		
		//displaying elements
		for(int i=0;i<arr.length;i++)
		{
			System.out.print(arr[i]+" ");
		}
	}
}

Q) Write a java program to display array elements one by one?

Input:
	6 9 1 4 2 5 
Output:
	6
	9
	1
	4
	2
	5 

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={6,9,1,4,2,5};	
		
		for(int i=0;i<arr.length;i++)
		{
			System.out.println(arr[i]);
		}
	}
}


for each loop
==============
In java, it is a enhanced for loop.

It is used to iterate over the elements from arrays and collections.

syntax:

		for(datatype variable: arrayVariable)
		{
			-
			- //code to be execut e
			-
		}


Q) Write a java program to display array elements one by one?

Input:
	6 9 1 4 2 5 
Output:
	6
	9
	1
	4
	2
	5 

class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={6,9,1,4,2,5};	
		
		for(int i:arr)
		{
			System.out.println(i);
		}
	}
}

Q) Write a java program to display array elements in reverse order?

Input:
	6 9 1 4 2 5 

Output:
	5 2 4 1 9 6 

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={6,9,1,4,2,5};	
		
		//reading reverse
		for(int i=arr.length-1;i>=0;i--)
		{
			System.out.print(arr[i]+" ");
		}
	}
}


Q) Write a java program to perform sum of array elements?

Input:
	6 9 1 4 2 5 

Output:
	27

ex:

class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={6,9,1,4,2,5};	
		
		int sum=0;
		
		for(int i:arr)
		{
			sum+=i;	
		}
		
		System.out.println(sum);
	}
}

Q) Write a java program to display even elements from given array?

Input:
	6 9 1 4 2 5 

Output:
	6 4 2 

ex:

class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={6,9,1,4,2,5};	
		
		for(int i:arr)
		{
			if(i%2==0)
			{
				System.out.print(i+" ");
			}
		}
		
	}
}


Q) Write a java program to count number of odd elements from given array?

Input:
	6 9 1 4 2 5 

Output:
	3

class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={6,9,1,4,2,5};	
		
		int cnt=0;
		
		for(int i:arr)
		{
			if(i%2!=0)
			{
				cnt++;
			}
		}
		System.out.println(cnt);
	}
}

Q) Write a java program to display prime elements?

Input:
	6 9 10 4 2 5 

Output:
	2 5 

ex:

class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={6,9,10,4,2,5};	
		
		for(int n:arr)
		{
			boolean flag=true;
			for(int i=2;i<=n/2;i++)
			{
				if(n%i==0)
				{
					flag=false;
					break;
				}
			}
			if(flag==true)
				System.out.print(n+" ");
		}
	}
}

Assignment
============
Q) Write a java program to display array elements in sorting order?


Input:
	6 9 10 4 2 5 

Output:
	2 4 5 6 9 10










































	













	






 


























































































