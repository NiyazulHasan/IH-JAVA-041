2) Static variables
===================
A value of a variable which is not varied(changes) object to object is called static variable.

Static variable will be created at the time of classloading and it will destroy at the time of classunloading.Hence scope of static variable is as same as scope of .class file.

Static variable will store in method area.

Static variable must and should declare immediately after the class using static keyword but not inside methods,blocks and constructors.

Static variable we access directly from static area as well as from instance area.

Static variable we can access by using object reference and class name.

ex:1
----
class Test
{
	//static variable
	static int i=10;
	
	public static void main(String[] args)
	{
		System.out.println(i); //10

		Test t=new Test();
		System.out.println(t.i); //10

		System.out.println(Test.i);//10		
	}
}

Note:
-----
If we won't initialize any value to static variable JVM will initialized default values.

ex:2
-----
class Test
{
	//static variable
	static String s;
	
	public static void main(String[] args)
	{
		System.out.println(s); 

		Test t=new Test();
		System.out.println(t.s);

		System.out.println(Test.s);	
	}
}

ex:3
-----
class Test
{
	//static variable 
	static int i=10;

	public static void main(String[] args)
	{
		Test t1=new Test();
		Test t2=new Test();

		System.out.println(t1.i);//10
		System.out.println(t2.i);//10

		t1.i=100;

		System.out.println(t1.i);//100
		System.out.println(t2.i);//100
	}
}

ex:4
-----
class Test
{
	public static void main(String[] args)
	{
		m1();

		Test t=new Test();
		t.m1();

		Test.m1();
	}

	//static method 
	public static void m1()
	{
		System.out.println("static-method");	
	}
}

3) Local variable
=================
To meet temperory requirements a programmer will declare some variables inside methods, blocks and constructors such type of variables are called local variables.

Local variables will be created at the time of execution block and they will destroy when execution block is executed.Hence scope of local variable is same as scope of execution block where it is declared.

Local variables will store in java stack memory.

ex:
---
class Test
{
	
	public static void main(String[] args)
	{
		//local variables
		int i=10;

		System.out.println(i); //10	
	}	
}

Note:
-----
If we won't initialize any value to local variable then JVM will not initialized default values.
		
ex:2
-----
class Test
{
	
	public static void main(String[] args)
	{
		//local variables
		int i;

		System.out.println(i); // C.T.E 
	}	
}
o/p:
	C.T.E : variable i might not have been initialized

A local variable will accept only one modifier i.e final.

ex:
---
class Test
{
	
	public static void main(String[] args)
	{
		//local variables
		final int i=10;

		System.out.println(i); //10
	}	
}


Interview Question
===================
Q) Jack and John both are best friends in a town.They goto school every day and comes together every day.One day while going to school they saw one begger and they decided to help him.Jack gave 100 rupees from his school fee and John gave 10 rupees from his pocket money.Write a java program to find out how much contribution they have done to help a poor guy?

ex:
---
class Test
{
	
	public static void main(String[] args)
	{
		sum();
	}	
	//static method 
	public static void sum()
	{
		int a=100;
		int b=10;
		int c=a+b;
		System.out.print(c);
	}
}





























































