Q) Write a java program to display pair of elements equals to given sum?

Input:
	arr = 6 9 4 1 3 7 2 5 
	
	sum = 10 

Output:
	6 4 
	9 1 
	3 7 

class Test  
{
	public static void main(String[] args) 
	{
		int[] arr ={6,9,4,1,3,7,2,5}; 
		int sum = 10;
		
		for(int i=0;i<arr.length;i++)
		{
			for(int j=i+1;j<arr.length;j++)
			{
				if(arr[i]+arr[j]==sum)
				{
					System.out.println(arr[i]+" "+arr[j]);
				}
			}
		}

	}
}

Q) Write a java program to display tripplets of elements equals to given sum?

Input:
	arr = 6 9 4 1 3 7 2 5 
	
	sum = 10 

Output:
	6 1 3
	4 1 5
	1 7 2
	3 2 5

ex:
--
class Test  
{
	public static void main(String[] args) 
	{
		int[] arr ={6,9,4,1,3,7,2,5}; 
		int sum = 10;
		
		for(int i=0;i<arr.length;i++)
		{
			for(int j=i+1;j<arr.length;j++)
			{
				for(int k=j+1;k<arr.length;k++)
				{
					if(arr[i]+arr[j]+arr[k]==sum)
					{
						System.out.println(arr[i]+" "+arr[j]+" "+arr[k]);
					}
				}
			}
		}
	}
}

Q) Write a java program to merge two arrays and display them in a sorting order?

input:
	5 1 3 4 2 
	9 6 8 7 10

output:
	1 2 3 4 5 6 7 8 9 10

ex:
---
import java.util.Arrays;
class Test  
{
	public static void main(String[] args) 
	{
		int[] arr1={5,1,3,4,2}; 
		int[] arr2={9,6,8,7,10};
		
		int size1=arr1.length;//5
		int size2=arr2.length;//5
		
		arr1=Arrays.copyOf(arr1,size1+size2);
		
		int j=0;
		for(int i=size1;i<arr1.length;i++)
		{
			arr1[i]=arr2[j++];
		}
		
		Arrays.sort(arr1);
		
		//display elements
		for(int i:arr1)
		{
			System.out.print(i+" ");
		}

	}
}


Q) Write a java program to delete first occurance of a given element?

input:
	arr = 6 3 2 5 2 9 1 2 4
	
	remove = 2 

Output:
	6 3 5 2 9 1 2 4 

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={6,3,2,5,2,9,1,2,4};
		int remove=2; 
		
		int cnt=0;
		for(int i=0;i<arr.length;i++)
		{
			if(arr[i]==remove && cnt==0)
			{
				cnt=1;
				continue;
			}
			
			System.out.print(arr[i]+" ");
		}
	}
}

Q) Write a java program to insert a given element on a given index?

input:
	arr = 7 5 1 3 9 4 6 

	element = 80

	index = 4

Output:
	7 5 1 3 80 9 4 6 	

	
import java.util.Arrays;
class Test  
{
	public static void main(String[] args) 
	{
		int[] arr ={7,5,1,3,9,4,6}; 
		int element = 80;
		int index = 4;

		arr = Arrays.copyOf(arr,arr.length+1);
	
		//reading reverse
		for(int i=arr.length-1;i>=index;i--)
		{
			arr[i]=arr[i-1];
		}
		
		arr[index]= element;
		
		//display elements
		for(int i:arr)
		{
			System.out.print(i+" ");
		}
	}
}


Q) Write a java program to identify and print all elements in an array that are greater 
than both their immediate predecessors and successors, considering the first and 
last elements as having only one neighbor? 
 
Input: 
  	1 3 20 4 75 0 90 
 
Output: 
 	20  75  90 

ex:

class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={1,3,20,4,75,0,90};	
	
		//first element
		if(arr[0]>arr[1])
		{
			System.out.print(arr[0]+" ");
		}
		
		for(int i=1;i<arr.length-2;i++)
		{
			if(arr[i]>arr[i-1] && arr[i]>arr[i+1])
			{
				System.out.print(arr[i]+" ");
			}
		}
		
		
		//last element
		if(arr[arr.length-1]>arr[arr.length-2])
		{
			System.out.print(arr[arr.length-1]);			
		}
		
	}
}


Q) Write a java program to determine the smallest number of coins needed to total 
86 rupees. Use the denominations provided in the array {1,2,5,10}? 
 
Output: 
 	1 coin(s) of 1 rupee(s) 
 	1 coin(s) of 5 rupee(s) 
 	8 coin(s) of 10 rupee(s) 	

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int[] denominations={1,2,5,10};
		int amount=86;
		
		//caller method 
		int[] result=minimumCoins(denominations,amount);
		
		for(int i=0;i<result.length;i++)
		{
			if(result[i]>0)
			{
			System.out.println(denominations[i]+" coin(s) of "+result[i]+" rupee(s) ");
			}
		}
	}
	//callie method 
	public static int[] minimumCoins(int[] denominations,int amount)
	{
		int[] coinsCount=new int[denominations.length];
		
		for(int i=denominations.length-1;i>=0;i--)
		{
			coinsCount[i] = amount/denominations[i];
			
			amount%=denominations[i];
		}
		
		return coinsCount;
	}
}


Double dimensional Array
========================
Double dimensional array is a combination of rows and columns.

Double dimensional array is implemented based on array of arrays approach but not matrix form.

The main objective of double dimensional array is memory utilization.

We can use double dimensional array to develop business oriented applications, gaming applications, matrix type of applications and etc.

We can declare double dimensional array as follow.

syntax:
	datatype[][] arr=new datatype[rows][cols];

ex:
	int[][] arr = new int[3][3];

	Here we can store 9 elements. 



Q) Write a java program to display array elements in matrix form?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the rows :");
		int rows=sc.nextInt();//3
		System.out.println("Enter the columns : ");
		int cols=sc.nextInt();//3
		
		int[][] arr=new int[rows][cols];
		
		//insert elements
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				System.out.println("Enter the element : ");
				arr[i][j]=sc.nextInt();
			}
		}
		
		//display elements
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				System.out.print(arr[i][j]+" ");
			}
			//new line
			System.out.println();
		}
		
	}
}

Q) Write a java program to display square of a matrix?

Input:
	1 2 3
	4 5 6	
	7 8 9 

ex:

class Test  
{
	public static void main(String[] args) 
	{
		int[][] arr={
						{1,2,3},
						{4,5,6},
						{7,8,9} 
					};		
					
		int rows=arr.length;
		int cols=arr[0].length;
		
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				System.out.print(arr[i][j]*arr[i][j]+" ");
			}
			//new line
			System.out.println();
		}
	}
}

Q) Write a java program to perform sum of diagonal elements?

class Test  
{
	public static void main(String[] args) 
	{
		int[][] arr={
						{1,2,3},
						{4,5,6},
						{7,8,9} 
					};		
					
		int rows=arr.length;
		int cols=arr[0].length;
		
		int sum=0;
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				if(i==j)
				{
					sum+=arr[i][j];
				}
			}
		}
		System.out.println(sum);
	}
}

Q) Write a java program to perform sum of upper triangle elements?


class Test  
{
	public static void main(String[] args) 
	{
		int[][] arr={
						{1,2,3},
						{4,5,6},
						{7,8,9} 
					};		
					
		int rows=arr.length;
		int cols=arr[0].length;
		
		int sum=0;
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				if(i<j)
				{
					sum+=arr[i][j];
				}
			}
		}
		System.out.println(sum);
	}
}

Q) Write a java program to display lower triangle elements?

class Test  
{
	public static void main(String[] args) 
	{
		int[][] arr={
						{1,2,3},
						{4,5,6},
						{7,8,9} 
					};		
					
		int rows=arr.length;
		int cols=arr[0].length;
		
		int sum=0;
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				if(i>j)
				{
					sum+=arr[i][j];
				}
			}
		}
		System.out.println(sum);
	}
}




































































































